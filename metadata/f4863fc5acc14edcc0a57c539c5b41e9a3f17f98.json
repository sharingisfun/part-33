{"title":"IBM OS2 DCE Client including DFS for OS/2 Warp","uid":3982465,"size":72580701,"categoryP":"applications","categoryS":"other_os","magnet":"?xt=urn:btih:f4863fc5acc14edcc0a57c539c5b41e9a3f17f98&amp;dn=IBM+OS2+DCE+Client+including+DFS+for+OS%2F2+Warp&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":1,"leechers":0,"uploader":"blandreth","files":2,"time":1200621361,"description":"**********************************************************************\nIBM DCE Client including DFS for OS/2 Warp\n\nLicensed Materials - Property of IBM\n(c) Copyright IBM Corp. and others 1980,1996.\nAll rights reserved.\nIBM is a registered trademark of International Business Machines Corp.\n\n**********************************************************************\n\n                       OS/2 DCE 2.1 - README\n\n**********************************************************************\n\nWelcome to DCE 2.1 for OS/2!\n\nThis file contains information you need to install OS/2 DCE 2.1,\nand additional information not included in the product documentation.\n\nThis README file is divided into the following categories:\n   -  Installing and Configuring DCE\n   -  OS/2 Fixpack information\n   -  Configuring DFS on a Slim Client\n   -  Application Development Environment\n   -  Notes for DCE Users\n      -Config/Unconfig/Environment set up\n      -Directory Service\n      -Security Service\n      -Remote Procedure Call\n      -Distributed Time Service\n      -DCED (The Security Client)\n      -DCECP\n      -Distributed File Service (DFS)\n      -Intercell Setup\n      -Start/Stop DCE\n      -Serviceability\n      -Internationalization\n      -MOCL(Management Object Class Library)\n      -EMS (Event Management Service)\n      -DCE Admin GUI\n      -DFS GUI\n      -Others\n   -  Problem Determination\n   -  Limitations\n   -  Publication Information\n\nInstalling and Configuring DCE\n==============================\n\nDCE install should setup most of the necessary environment variables\nand paths to allow you to run DCE. Please see the Getting\nStarted book (Chapter 7,8) for more detailed information\nabout how to install and configure DCE. The Getting Started\nbook is located in the /pubs directory (DCEGETST.INF\nand DCEGETST.PS).\n\nThere is a variable in your config.sys called &quot;THREADS&quot;, whose\ndefault value is 256. This value needs to be set to at least 1024\non DCE Clients, and 2048 on DCE Servers. The &quot;THREADS&quot; variable\ntells OS/2 the maximum number of threads that can be created.\n\nIf you want to use response files to configure DCE, you should\ninclude the drive and path when specifying your response file names.\nIf you do not include the drive and path specification, you might\nreceive an error message that your response files could not be found.\n\nOS/2 DCE supports 3 protocol sequences, ncacn_ip_tcp,\nncadg_ip_udp, and ncacn_nb_stream.  The first two require\nTCP/IP network interfaces to be configured.\n\nOS/2 DCE fully supports the following TCP/IP network interfaces:\n\n=&gt; lan0 - lan7\n\nThis is for TCP/IP over LAN adapters.  Only Token Ring and\nEthernet adapters have been tested.  The list of tested LAN\nadapters is published separately.\n\n=&gt; sl0\nThis is the SLIP interface for TCP/IP over a serial line.\n\nOther TCP/IP network interfaces are not explicitly \nsupported. The RPC_UNSUPPORTED_NETIFS environment variable \nis to be used in situations where TCP/IP network interfaces are\nconfigured which you do not want DCE to use.\n\nFor example, to exclude the sna0 network interface on a \nmachine which has Sockets over SNA installed and configured, \nuse the RPC_UNSUPPORTED_NETIFS environment variable to cause \nOS/2 DCE to skip the sna0 network interface.\n\nAnother example would be when a server has a second network\nadapter on a isolated LAN.  You do not want that network\ninterface to be put into the namespace, since no one can\nreach the server via that interface.\n\nTo cause OS/2 DCE to skip a network interface, set the\nRPC_UNSUPPORTED_NETIFS environment variable in CONFIG.SYS\nand reboot the machine, BEFORE installing and configuring\nOS/2 DCE.\n\nExamples:\nSET RPC_UNSUPPORTED_NETIFS=sna0   or\nSET RPC_UNSUPPORTED_NETIFS=lan1:sna0\n\nOS/2 Fixpack information\n========================\n\nIn most countries, DCE requires Warp Fixpack 21 or later when you\ninstall DCE on Warp, Warp Connect or Warp Server. A Fixpack\n21 CD-ROM is included in the box for your convenience. A one page\ninsert tells you how to install the Fixpack.\n\nIf your country or language is not on the Fixpack 21 CD-ROM, please\ncontact your IBM service representative for information.\n\n\nConfiguring DFS on Slim Client\n==============================\n\nWhen your DCE host is configured as a DCE Slim Client, the DFS Client is\nconfigured through a separate utility.\n\nIn the &quot;DCE Services&quot; folder, you can configure the DCE Slim Client\nwith &quot;Configure DCE Services.&quot;  You can then configure the DFS Client\nby selecting &quot;Configure DFS for Slim Client.&quot;  You will be prompted\nfor configuration information.  You can accept the defaults for all\nconfiguration entries.  Help is available for any configuration\noption presented.\n\n&quot;Configure DFS for Slim Client&quot; does not start the DFS Client.\nAfter DFS for Slim Client configuration is successful, start\nthe DFS Client by reselecting &quot;Start DCE&quot; or by running either\n&quot;dcestart&quot; or &quot;dcestart dfs_client&quot; from the command line.\n\nYou can unconfigure DFS using the &quot;Unconfigure DFS for Slim Client&quot;\nobject.  This option is available unless the full DCE Client is\nconfigured.\n\nNote: to configure or unconfigure the DFS Client for the full DCE\nClient configuration, use the &quot;Configure DCE Services&quot; object.\n\n\nApplication Development Environment\n===================================\nThe DCE Toolkit contains the DCE include files, the DCE program\ndevelopment tools and  DCE Examples. The DCE Toolkit can be \ninstalled via the DSS Toolkit Install Program. You can install \nthe DSS Toolkit as follows:\n\n  1)  Insert the DSS CD-ROM\n  2)  At the OS/2 command prompt, change to the CD-ROM drive\n      and change directory to TOOLKIT\n  3)  Type &quot;INSTALL&quot; and press ENTER.\n\nThe DSS toolkit install program will present a menu to guide\nthe installation.\n\nThe DCE Toolkit and DCE Examples can only be installed on a\nHPFS partition. The installation program will fail when trying\nto install the DCE Toolkit and DCE Examples on a FAT partition.\n\nTHE DCE Application Development books can be viewed from the\nDSS CD_ROM by typing  &quot;view file_name&quot; while in the\nTOOLKITPUBS directory.\n\nThe following DCE Examples are provided:\n    1) acl manager        ---&gt;  optdcelocalexamplesacl_mgr\n    2) bank               ---&gt;  optdcelocalexamplesbank\n    3) context_app        ---&gt;  optdcelocalexamplesdemocontext_app\n    4) data_test_app      ---&gt;  optdcelocalexamplesdemodata_test_app\n    5) sample             ---&gt;  optdcelocalexamplesdemogeneric_app\n    6) ems                ---&gt;  optdcelocalexamplesems\n    7) binop              ---&gt;  optdcelocalexamplespubsbinop\n    8) dts sample         ---&gt;  optdcelocalexamplespubsdtssamp\n    9) greet (4)          ---&gt;  optdcelocalexamplespubsgreet\n   10) prime              ---&gt;  optdcelocalexamplespubsprime\n   11) string-tree        ---&gt;  optdcelocalexamplespubsstrtree\n   12) password strength  ---&gt;  optdcelocalexamplespwdstren\n   13) hello_svc          ---&gt;  optdcelocalexamplessvchello_svc\n   14) timop_svc          ---&gt;  optdcelocalexamplessvctimop_svc\n   15) timop              ---&gt;  optdcelocalexamplestimop\n   16) type manager       ---&gt;  optdcelocalexamplestype_mgr\n   17) xds/xom            ---&gt;  optdcelocalexamplesxdsxom\n\nThe DCE Examples were tested with the IBM C Set/2 Version\n2.01 Compiler, the IBM VisualAge C++ Compiler, the Borland C++ 2.0\nCompiler and the Watcom C/C++ for OS/2 10.5 compiler. The\nexamples were also tested with the IBM Warp 3.0 Toolkit.\n\nPlease pay *close* attention to the compiler and linker flags used\nin the examples that are shipped with this product. These are the\nsame compiler and linker flags that you should use for your\napplication development. One of the compiler flags that MUST be\nspecified is -Su4. You may encounter various problems with RPC\nruntime and security APIs if you do not specify this compiler\noption in your Makefile.\n\nFor more information on the DCE Examples, please see the main\nDCE Examples Readme located in optdcelocalexamples.\n\nNotes for DCE Users\n===================\n\nConfig/Unconfig/Environment Setup\n---------------------------------\n\n*Use the following procedure if you need to change the IP address\n of a machine configured as a CDS and/or a Security server.\n\n    1) Remove knowledge of the clearinghouse on the machine.  It is\n       reinstated after the IP address is changed.  If you do not know the\n       name, use the cdscp show cell /.: command to get it.\n \n       cdscp clear clearinghouse /.:/&lt;host_ch&gt;\n \n       Note: If you have difficulty with this command, type the cdscp\n       clearinghouse commands while cdsd is initializing itself.  This is\n       done by using another window to stop the running cdsd.  When you\n       restart the cdsd, type the cdscp command from your authenticated\n       window while cdsd is coming up.\n \n    2) Stop all DCE daemons on the machine:\n \n       dcestop\n \n    3) Remove the endpoint database.  It is recreated on restart:\n \n       erase  &lt;x&gt;:optdcelocalvardcedEp.db\n \n       where x is the drive where DCE is installed.\n \n    4) Remove the clerk cache.  It is recreated on restart:\n \n       cd &lt;x&gt;:optdcelocalvaradmdirectorycds\n       erase cdsclerk_*\n       erase cdscache.ver\n       erase cdscache.nnn (nnn is a 3 digits number)\n \n    5) Edit the &lt;x&gt;:optdcelocaletcsecuritype_site file to reflect the\n       new address so that security can start.\n \n    6) Remove old credentials:\n \n       cd &lt;x&gt;:optdcelocalvarsecuritycreds\n       erase *\n \n    7) Change the IP address on your system and reboot. Start the DCE daemons:\n \n       dcestart\n \n       The gdad and dtsd daemons do not come up since CDS is not completely\n       functional yet. Start these daemons after the conversion process is\n       completed.\n \n    8) Since CDS is not available, use the BIND_PE_SITE environment\n       variable for security with the following commands:\n \n       SET BIND_PE_SITE=1\n       dcelogin cell_admin\n \n    9) Identify to CDS the clearinghouse it is to manage (ensure that you\n       use the same name as in the previous &amp;#039;clear clearinghouse&amp;#039; command ):\n \n       cdscp create clearinghouse /.:/&lt;host_ch&gt;\n \n       Note: If you have difficulty with this command, type the cdscp\n       clearinghouse commands while cdsd is initializing itself.  This is\n       done by using another window to stop the running cdsd.  When you\n       restart the cdsd, type the cdscp command from your authenticated\n       window while cdsd is coming up.  This command may appear to\n       fail.  Reissue the create command.  If the message &quot;Specified\n       full name already exists&quot; is displayed, the command was successful.\n \n   10) Because the CDS server was not aware of its clearinghouse when\n       it was started, the cdsadv process is also unaware of the\n       existence of this clearinghouse.  Rebuild the clerk cache:\n \n       dcestop cdsd\n       cd &lt;x&gt;:optdcelocalvaradmdirectorycds\n          /* &lt;x&gt; is the drive where DCE is installed*/\n       erase cds_cache.* cdsclerk_*\n       dcestart cdsd\n \n       The CDS and Security servers are now reconfigured to use the new IP\n       address. Type the following commands at the OS/2 command prompt:\n \n       SET BIND_PE_SITE=\n       dcelogin cell_admin\n \n   11) Verify that you can now successfully access the namespace:\n \n       cdsli -o\n       /.:/cell-profile\n       /.:/fs\n       /.:/lan-profile\n       /.:/sec\n \n   12) Update the server self entry in CDS:\n \n       rpccp unexport -i e1af8308-5d1f-11c9-91a4-08002b14a0fa,3.0 \n                /.:/hosts/&lt;server_name&gt;/self\n \n       rpccp export -i e1af8308-5d1f-11c9-91a4-08002b14a0fa,3.0 \n                -b ncadg_ip_udp:&lt;new_ip_addr&gt;[135] \n                /.:/hosts/&lt;server_name&gt;/self\n \n  This completes the server portion of the IP address change procedure.\n\n  Use the following procedure on each DCE client in your cell if\n  the IP address of a machine configured as a CDS and/or a Security\n  server has changed.\n\n    1) Stop all DCE daemons on the machine:\n\n       dcestop\n\n    2) Remove the clerk cache since it has references to the CDS server&amp;#039;s old\n       IP address. The cache will be recreated on restart:\n\n       cd &lt;x&gt;:optdcelocalvaradmdirectorycds\n       erase cds_cache.* cdsclerk_*\n \n    3) Change the &lt;x&gt;:optdcelocaletcsecuritype_site file so that\n       the security client can find the security server on restart.\n \n    4) Remove the security credentials:\n \n       cd &lt;x&gt;:optdcelocalvarsecuritycreds\n       erase *\n\n    5) Start the DCE daemons:\n\n       dcestart\n\n    6) Since CDS access is not restored yet, set the BIND_PE_SITE\n       variable:\n\n       SET BIND_PE_SITE=1\n       dcelogin cell_admin\n\n    7) Inform the cdsadv process of the new IP address for the CDS server:\n\n       cdscp define cached server &lt;server_name&gt; tower\n\n    8) At this point, the client is fully aware of the server&amp;#039;s new IP address:\n\n       SET BIND_PE_SITE=\n\n    9) Update client&amp;#039;s self entry in CDS: (this step not required for slim\n       clients)\n  \n       rpccp unexport -i e1af8308-5d1f-11c9-91a4-08002b14a0fa,3.0 \n                 /.:/hosts/&lt;client_name&gt;/self\n  \n       rpccp export -i e1af8308-5d1f-11c9-91a4-08002b14a0fa,3.0 \n                 -b ncadg_ip_udp:&lt;new_ip_addr&gt;[135] \n                 /.:/hosts/&lt;client_name&gt;/self\n\n   This completes the client portion of the server IP address change\n   procedure.\n\n*If you change the IP address of your DCE server, the config GUI\n might think your Security Master Server was a Security Replica Server.\n The problem is with machines which have TCPIP 2.0 or 2.1.\n You can use syslevel to see what you have. On machines with TCPIP 2.0\n SETUP.CMD is kept in 2 places, TCPIPBIN and MPTNBIN. If you had\n just the TCPIP product installed, it would be TCPIPBIN. Once MPTS\n is installed and configured, MPTS config will copy SETUP.CMD to\n MPTNBIN. In this case, MPTS config will not allow you to configure\n TCPIP addresses through the MPTS GUI but will depend on the TCPIP\n 2.0 config program (TCPIPCFG) to do it. However TCPIPCFG does not\n know about the copy of SETUP.CMD in MPTNBIN and will not update it.\n So the right way to do this IP address update is to\n   1)use TCPIPCFG to update TCPIPBINSETUP.CMD, and\n   2)run MPTS configuration, go into the LAPS panel and choose OK\n     so MPTS config will verify the configuration, including\n     copying TCPIPBINSETUP.CMD to MPTNBIN.\n\n On TCPIP 3.0 machines (WARP Connect or Warp Server), there should\n be just one copy of SETUP.CMD in MPTNBIN. the TCPIP config program\n (TCPCFG) should update everything correctly.\n\n*If you are configuring an HP 1.03 DCE client into an OS/2 DCE\n server cell, your might find that dce_config script fails on\n the HP machine.  Failure is due to the fact that the HP attempts\n to issue the &quot;telnet &lt;host&gt; daytime&quot; command to get the system\n time off of the OS/2 security server. However the TCPIP 3.0\n telnet client does not support the daytime extension. The\n work around is to comment out &quot;telnet &lt;host&gt; daytime&quot; in the\n script.\n\n*If the command &quot;hostname&quot; is not returning the system name correctly,\n DCE will not configure.  The hostname command executes the system\n call &quot;gethostbyname&quot; and so does the DCE configuration routine.\n Use tcpipcfg to make sure the routes are correct for your subnet.\n At a minimum you should have:\n   .Default IP for your route\n   .Your local subnet your ip address\n\n   Example:\n   default   9.3.127.1 (router for subnet)\n   9.3.127.0  9.3.127.48 (your ip address)\n\n*&amp;#039;self&amp;#039; principal is denied permissions after security slave unconfig.\n  After unconfiguring a security replica, the permissions added during\n  configuration are removed from the &amp;#039;hosts/&lt;hostname&gt;/self&amp;#039; entry for\n  the following ACLs.\n\n  /.../&lt;cellname&gt;/sec/replist\n  /.../&lt;cellname&gt;/subsys/dce/sec\n  /.../&lt;cellname&gt;/subsys/dce/sec -io\n  /.../&lt;cellname&gt;/subsys/dce/sec -ic\n  /.../&lt;cellname&gt;\n  /.../&lt;cellname&gt;/sec -e\n  /.../&lt;cellname&gt;/cell-profile -e\n\n  This may result in an ACL entry that looks like this\n      {user host/&lt;hostname&gt;/self -------}\n\n  Which means that &amp;#039;self&amp;#039; is denied any permission to that\n  object.  The administrator can delete this ACL entry using dcecp\n  which will allow the self principal to inherit permissions\n  from other ACL entries (For example: any_other or unauthenticated).\n\n*When using auto configuration feature, the CDS client machine\n and CDS server machine have to be on the same LAN segment,\n otherwise, you will need proxy advertiser feature.\n\n*After DCE cell is unconfigured, please verify that\n /opt/dcelocal/var/audit/adm/acl file is removed. If not, remove\n it manually.\n\n*While configuring a CDS client, the configuration program can\n wait up to an hour to communicate with the CDS server.\n If the configuration program appears to be hung, make sure that\n the CDS server is up and running.\n\n*The DCE Configuration program deliberately replicates the\n /.:/subsys/dce/sec directory when it configures a secondary CDS server.\n During the configuration of a security replica, entries are created\n in this directory but may not be propagated to the CDS secondary\n servers immediately.  Since these entries are referenced during\n subsequent pieces of the security replica configuration, failures\n may occur.  Therefore, it is recommended that all cdsd daemons\n which are running on secondary CDS servers be stopped before\n attempting to configure a security replica into the cell. After\n successful configuration of the security replica, the cdsd daemons\n should be restarted.\n\n*If you are configuring a NETBIOS only slim client in the intercell\n environment, you need to run &quot;buildwan.cmd&quot; to generate the CDS\n WAN cache file (cdscache.wan). The usage of the command is described\n as follows:\n\n   Usage: buildwan\n   The command will prompt &quot; Enter servername protocol&quot;\n   Where servername is the tcpip host name or netbios host name\n         protocol is the protocol used:  tcp | udp | nb\n\n   Example 1: (with tcp)\n\n   C:&gt; buildwan                              /* input */\n   C:&gt; Valid protocols are tcp, udp, nb      /* output */\n        Enter: servername protocol            /* output */\n        linh1 tcp                             /* input */\n\n   Example 2: (with netbios)\n\n   C:&gt; buildwan                              /* input */\n        Valid protocols are tcp, udp, nb      /* output */\n        Enter: servername protocol            /* output */\n        LINH2 nb                              /* input */\n\n*If the CDS secondary server is not running, you might get\n the following error message while you try to admin unconfig\n the secondary CDS server:\n &quot;Not registered in endpoint map.&quot;\n\n To work around this problem, please do the following:\n If &quot;initial_ch&quot; is the name of the clearinghouse owned by the\n initial CDS and &quot;second_ch&quot; is the name of the clearinghouse owned by\n the secondary CDS that we are trying to unconfig, then\n\n cdscp set directory /.: to new epoch master /.:/initial_ch exclude\n /.:/second_ch\n cdscp set dir /.: to skulk\n cdscp del obj /.:/second_ch\n\n and then use the administrative unconfiguration to remove the rest of the\n information about the CDS secondary from the cell.\n\n You will also see the error message mentioned above if you attempt \n to do a full unconfig of the CDS secondary server when it is not \n running. Part of the configuration will complete, but you will \n not be able to complete the full unconfig. Complete a local \n unconfig, then do the above steps to complete the admin unconfig.  \n\n*If you reconfigure the master security server and initial\n directory server, you MUST reconfigure your DCE clients since\n the server will no longer have any information about the clients.\n\n*During unconfiguration of a security slave replica, the unconfig\n process may return with a message that the unconfiguration failed,\n but there is no evidence of the server on the machine (i.e., the\n slave security replica entry does not appear in the output of\n a &amp;#039;showcfg&amp;#039; command).  This is because one or more administrative\n cleanup tasks failed, and it will be impossible to reconfigure a\n security slave replica with the same name unless the administrative\n cleanup tasks are completed manually.  Follow these steps:\n\n  1) On a machine configured into the cell, dcelogin as the cell\n     administrator.\n  2) Clean up the namespace and the security replica list.\n     dcecp -c object delete /.:/subsys/dce/sec/&lt;replica_name&gt;\n     dcecp -c registry delete subsys/dce/sec/&lt;replica_name&gt; -force\n  3) Remove the replica from the rpc group:\n     rpccp remove member /.:/sec -m /.:/subsys/dce/sec/&lt;replica_name&gt;\n\n This should be sufficient to allow reconfig of a security replica\n having the same name as the one unconfigured. Even if you do not plan\n to reconfigure the system as a security slave replica,  it is advisable\n to perform this cleanup so the cell-wide information in the namespace and\n security registry are as up-to-date as possible. Likewise, if any local\n unconfiguration takes place, the appropriate administrative\n unconfiguration should also be performed.\n \n*If you change the window startmode (single, multiple, none)\n through the DCE Config GUI, on a machine that is already configured,\n all components will be reconfigured.  The new setting will be\n used when the daemons are started, and will be put into config.sys.\n This value will not override the environment setting (if one had\n been set (on a reboot after the previous config)). The config\n engine checks the environment setting first. If you bring up \n the config GUI before rebooting, you will see the new start mode\n setting. You should NOT change this setting on the GUI because that\n will cause the config code reconfig again. \n\n*If you unconfigure your initial CDS server (the keeper of the\n root dir - not necessarily the first CDS Server configured in\n the cell), you need to unconfigure the entire cell - including\n the master security server.                                     \n\n*If you are using parenthesis to delimit a value list in your \n config response file, please pay special attention to the \n following rules:\n\n  1) The left parenthesis needs to be on the same line as the value\n     list keyword and equal sign.\n\n  2) The right parenthesis needs to be on a separate line, since     \n     if it were on the same line as the value, then it would be\n     considered part of the value.            \n\n  The following is an example:\n\n          components=(\n                 sec_cl=(\n                         config_state=configured\n                         unconfig_depend=no\n                         force_unconfigure=no\n                         )\n                 )                   \n\nDirectory Service\n-----------------\n\n*The clearinghouse relocation procedure is not exactly correct as\n documented in the DCE Admin guide, Chapter Cell Directory Service\n (CDS), section Relocating a Clearinghouse. Following is the correct\n procedure for relocating a clearinghouse named /.:/my_ch, where\n &lt;d&gt; is the drive letter on which the dcelocal directory resides.\n\n  1) dcelogin as cell_admin on CDS servers A and B\n  2) dcecp -c clearinghouse disable /.:/my_ch on server A\n  3) cd &lt;d&gt;:optdcelocalvardircds on server A\n  4) Check the cdsfiles.map files for entries associated with\n    /.:/my_ch.  They will look something like the following\n    &lt;d&gt;:optdcelocalvardircdsacell#my_ch.checkpoint001\n     -&gt; &lt;d&gt;:optdcelocalvardircdsAAAAAAAA\n    &lt;d&gt;:optdcelocalvardircdsacell#my_ch.tlog001\n     -&gt; &lt;d&gt;:optdcelocalvardircdsBBBBBBBB\n    &lt;d&gt;:optdcelocalvardircdsacell#my_ch.version\n     -&gt; &lt;d&gt;:optdcelocalvardircdsCCCCCCCC\n  5) Transfer the files that you found in step 4, AAAAAAAA,\n     BBBBBBBB, and CCCCCCCC, to the analogous directory on\n     server B\n  6) Extract and add the map entries you found in server A&amp;#039;s\n     cdsfiles.map in step 4 to server B&amp;#039;s cdsfiles.map, changing\n     the drive letter if necessary\n  7) On server A, delete the entries you found in server A&amp;#039;s\n     cdsfiles.map in step 4 and the files associated with them\n  8) dcecp -c clearinghouse create /.:/my_ch on server B\n\n*If the machines to be used are of different speeds, it is advisable\n to configure the primary CDS server on a machine which is as fast as\n or faster than the clients.  If both a primary CDS server and a\n secondary CDS server are used, the primary CDS server should be as fast\n or faster than the secondary CDS server and all other CDS clients.\n\n*The cdsdbdmp.exe utility that is used to dump the cds checkpoint/Tlog \n file does not work. Please do not attempt to use it. \n\n \nSecurity Service\n----------------\n*The following options have been added to the dcelogin command:\n\n[-k[eyfile] file_name]  Validates the principal_name identity by using\n                        a password-derived key obtained from a keytable\n                        file identified by file_name (instead of using\n                        a password supplied as a command line option).\n                        The file_name must include full path name of the\n                        file together with the characters FILE: prepended\n                        to path name, for example:\n\n                        FILE:x:optdcelocalkrb5mykeyfile\n                        where x is the drive where DCE is installed\n\n                        This file must have been created by the\n                        appropriate rgy_edit, dcecp, or\n                        sec_key_mgmt_set_key functions.\n                        When using this option, do not\n                        include a password as a command line option.\n                        This option is incompatible with the -n and -c\n                        options.\n\n[-r]                    Results in a refresh of network credentials,\n                        the acquisition of a new Ticket Granting\n                        Ticket (TGT), currently associated with the\n                        process in which this command will be executed.\n                        When using this option, do not include\n                        principal_name as a command line option.\n                        This option is incompatible with the -s\n                        option.\n\n\n*The in-memory database used internally by the security server will grow\n if entries are repeatedly created and deleted.  This growth is temporary,\n until the security server is restarted.  If the server is stopped\n unexpectedly, like in a power loss, it will replay all activity since the\n last 2-hour checkpoint had occurred, and it will show the same growth as\n would have been observed when the updates were first done.\n\n*When a user with pwd_val_type 3 (i.e., a user with password generation\n required) needs to reset their password, he/she cannot use the dcecp\n program because dcecp does not check the value of the pwd_val_type\n Extended Registry Attribute (ERA) when performing password changes.\n The dcecp program offers no opportunity for the user to present a\n generated password; any password proposed will be rejected because it\n is not present in the generated password cache.\n\n For this release, if the cell administrator wants to change the password\n of a principal with a pwd_val_type Extended Registry Attribute (ERA)\n of type 3, password generation required, he/she can do so in one of two\n ways:\n\n Using  dcecp :\n\n 1) dcelogin as the cell administrator\n\n 2) Invoke dcecp\n     /* user supplied values in brackets &lt;like_this&gt; */\n\n 3) Change the pwd_val_type ERA value from 3 to 0, 1, or 2:\n\n      dcecp&gt;principal modify &lt;principal_name&gt; -change {pwd_val_type 0}\n\n 4) Set the user password to the new desired value:\n\n      dcecp&gt;account modify &lt;principal_name&gt; -password &lt;new_password&gt;\n      Enter Your Password:  &lt;cell_admin_password&gt;\n\n\n 5) Change the pwd_val_type ERA value back to 3:\n\n      dcecp&gt;principal modify &lt;principal_name&gt; -change {pwd_val_type 3}\n\n Using rgy_edit:\n\n 1) Login as the cell administrator\n\n 2) Invoke rgy_edit\n\n  rgy_edit=&gt;domain account\n  rgy_edit=&gt; change\n  Change Account=&gt; Enter account id [pname]: &lt;account_name&gt;\n  Enter account group [gname]: &lt;group_name&gt;\n  Enter account organization [oname]: &lt;organization_name&gt;\n  Enter new account id [pname]: (account_name)\n  Enter new account group [gname]: (group_name)\n  Enter new account org [oname]: (organization_name) Change password?\n  [y/n]?  y\n  Generated password is: newly_generated_password, please enter as\n  new password\n  Enter new password:&lt;newly_generated_password&gt;\n  Retype new password:&lt;new_password&gt;\n  Enter your password:&lt;administrator_password&gt;\n  Enter new misc info: ()\n  Enter new home directory: (/)\n  Enter new shell: () Password valid [y/n]? (y)\n  Enter new expiration date [yy/mm/dd or &amp;#039;none&amp;#039;]: (none)\n  Allow account to be server principal [y/n]? (y)\n  Allow account to be client principal [y/n]? (y) Account valid for login\n  [y/n]? (y)\n  Allow account to obtain post-dated certificates [y/n]? (n)\n  Allow account to obtain forwardable certificates [y/n]? (y)\n  Allow certificates to this account to be issued via TGT authentication\n  [y/n]?  (y)\n  Allow account to obtain renewable certificates [y/n]? (y)\n  Allow account to obtain proxiable certificates [y/n]? (n)\n  Allow account to obtain duplicate session keys [y/n]? (n)\n  Good since date [yy/mm/dd.hh:mm or &amp;#039;now&amp;#039;]: (1996/05/25.13:50)\n  Create/Change auth policy for this acct [y/n]? (n)\n  rgy_edit=&gt;exit\n\n*In certain situations, an application server&amp;#039;s password key that is\n stored in the keytab file could become different from the password\n key that is stored in the DCE registry database.  When this\n situation occurs, you will not be able to use the application server\n because it has an invalid password.\n\n This situation could occur when the DCE security server is brought\n down while the application server remains up and running and the\n application server generates a new password key.  In this situation,\n the application server stores the new password key in the keytab\n file, but, because the DCE security server is down, the application\n server cannot store the new password key in the DCE registry\n database.  Therefore, the two password keys will be different and\n the application server will have an invalid password.\n\n To recover from this situation, issue the following command while\n the application server is down and the DCE security server is up and\n running:\n\n       dcecp -c keytab add &lt;keytab_name&gt; -member &lt;server_name&gt; -random\n       -registry\n       where:\n          &lt;keytab_name&gt; is the name of the keytab object representing\n                        the keytab file.\n          &lt;server_name&gt; is the principal name, as stored in the DCE\n                        registry database, for the application server.\n\n After executing this command, you can start the application server.\n The two password keys will be in synchronization, so you will no\n longer encounter invalid password problems with the application\n server.  In the future, be sure to bring down the application server\n before bringing down the DCE security server.  If the DCE security\n server goes down from abnormal conditions, bring down the\n application server immediately.\n\n*This information applies if you are using the password strength\n component of DCE to require password generation.  If a user performs\n a dcelogin when password generation is required and the user enters\n his/her generated password incorrectly, the user will not be able to\n complete the dcelogin when asked to try again.  This situation\n occurs even if, when trying again, the user enters the generated\n password correctly.\n\n For example:\n\n       dcelogin -n type_3_user type_3_user&amp;#039;s password\n        DCE LOGIN SUCCESSFUL\n        Your generated password is ciutgi\n        Type this as your new password.\n        Enter New Password: anything_else_besides_ciutgi\n        Re-enter New Password:anything_else_besides_ciutgi\n        New password was not valid.  Try again? [y/n] (y)  y\n        Enter New Password: ciutgi\n        Re-enter New Password: ciutgi\n        Warning: Cannot update registry password: Data\n         integrity error (invalid\n        password is specified) (dce / sec)\n\n To recover from this situation, the user needs respond to the &quot;Try\n again?&quot;  prompt with &lt;n&gt;.  Then, the user can start the entire\n dcelogin again.\n\nRemote Procedure Call\n---------------------\n\n*You may select particular RPC protocol sequence support by\n modifying the file &quot;optdcelocaletcprotseqs.rpc&quot;, to include only\n those you wish to use. You need to stop all DCE daemons and restart\n them to activate the change. You may also change the protocol\n sequence support in each individual session by setting the environment\n variable RPC_SUPPORTED_PROTSEQS to the protocol sequences needed.\n However, please make sure the client session and the server session\n are both set to the same set of RPC protocol sequences. Otherwise,\n the communication may not be able to be established. If both the\n environment variable and the file have been used, the environment\n variable setting takes precedence.\n\nDistributed Time Service\n------------------------\n\n*Since OS/2 is not timezone aware, while you are switching from day-\n light saving time to standard time or standard time to daylight\n saving time, you need to do the following:\n\n 1) Change the TZ variable in your config.sys to  &quot;TZ=xxx6&quot; or\n    &quot;TZ=xxx5&quot; depending on if it standard time or daylight saving\n    time. xxx represents the timezone. For example, cst6 is\n    the standard central time. Do not use the automatic style\n    timezone (for example, cst6cdt). The automatic style timezone\n    does not work for OS/2.\n 2) Change the system clocks of all your workstations to\n    reflect the time change.\n 3) Reboot all your workstations.\n\nDCED (The RPC and Security Client)\n----------------------------------\n\n*If you have a machine which has WARP Server Entry and SystemView\n installed, you might find that DCED cannot open port 135 and\n terminates during DCE configuration.  The failure is caused by\n the execution of i4llbd.exe (LLB daemon). This executable\n grabs port 135 up on system boot and DCED will be using port 135\n too. Since LLB support is part of DCED, please rename i4lldb.exe and\n reboot your system. You will be able to start SystemView Support\n Program and Software Distribution Agent without problem.\n\nDCECP\n-----\n\n*Running dcecp audevent and dcecp audfilter on FAT system.\n Since ALL the Event Configuration Files which were installed\n in /opt/dcelocal/etc/audit/etc are converted to upper cases,\n event class supplied to dcecp audevent and dcecp audfilter\n commands MUST be exactly the same names i.e in upper cases.\n\n*If you would like to create multiple entries when issuing\n DCECP commands, use curly braces around the list of objects\n For example, you can create two principals with the following\n DCECP command:\n\n dcecp\n dcecp&gt; principal create {foo1 foo2}\n\n\nDistributed File Service \n------------------------\n\n*DFS on DCE Slim Clients cannot be configured through the DCE\n configuration GUI (dcecfgg). See the DFS configuration section\n of this readme.\n\n*To avoid potential data loss and DFS Server performance problems,\n the following guidelines MUST be observed:\n\n Always perform an OS/2 &quot;Shut down&quot; to stop or reboot a machine that\n is running the OS/2 DCE DFS Client.\n\n If you can&amp;#039;t &quot;Shut Down&quot;, then first stop DFS (&quot;dcestop dfs_c&quot;,\n or dcestop&quot;) before rebooting or stopping the machine.\n\n*The &quot;DCE DFS Client&quot; guide has incorrect examples of the\n &lt;dcelocal&gt;etcCachInfo configuration file in sections\n &quot;Displaying the Cache Size form the Cachinfo File&quot; (page 3-3)\n and &quot;Configuring the dfsd Process with the CachInfo File&quot; (14-3).\n\n Good examples of the CachInfo file follow:\n\n ======= example ==============\n\n e:dfscache*6400*16*20\n 86400*86400*3600\n /.../cellname/fs*+\n /.:/fs/mydir*z\n /:*r\n\n The first line sets the DFS disk cache working directory to e:cache,\n the size of the cache to 6400 blocks of 1KB each, each cache chunk\n holding 64 KB (2^^16), and the number of OS/2 file handles allowed\n in the dfsd process to 20.\n\n ======= example ==============\n\n MemCache*1000*13*20\n 86400*86400*3600\n /.../my.cell/fs*-\n\n The first line sets the DFS cache to be a Memory Cache,\n the size of the cache to 1000 blocks of 1KB each, each cache chunk\n holding 8 KB (2^^13), and the number of OS/2 file handles allowed\n in the dfsd process to 20.\n\n*The &quot;dfsln&quot; command is available for creating symbolic links within\n the DFS namespace.  &quot;dfsln&quot; is not documented in the &quot;DCE DFS Client&quot;\n guide.\n\n   -dfsln: create/delete symbolic link in DFS namespace.\n\n   -Link Creation: dfsln (NewLink) (DFSobject)\n    NewLink   = The pathname of the new symbolic link to create.\n    DFSobject = pathname of existing file/dir to link to.\n\n   -Link Deletion: dfsln -d (OldLink)\n    OldLink   = The pathname of the existing symbolic link to delete.\n\n   -Only pathnames in the DFS namespace are valid as input to\n    this command:\n    - fully qualified DFS style pathnames (begin with &quot;/...&quot;).\n    - OS/2 Style pathnames that refer to DFS attached drive letters.\n\n*If you are using DFS with a Disk Cache, the files in the\n DFS cache directory must not be modified except by DFS itself.\n Modifying cache files or deleting a subset of the cache files\n will lead to unpredictable results.  If this happens, you should\n delete the DFS Cache (see below).\n\n If you need to start the DFS Client (dfsd) directly to modify the\n unconfigurable &quot;-files&quot; option, you should delete the DFS Cache\n (see below) before restarting &quot;dfsd&quot; with a new -files value.\n\n To delete the DFS cache:\n    - Stop the DFS Client.\n    - You should ensure that the DFS Client terminates successfully\n      before deleting the DFS Cache.  If any modified file data\n      could not be flushed to DFS Server(s), you should not\n      delete the cache; data-loss could result.\n    - Delete all of the DFS Cache files from the currently configured\n      DFS Cache Directory (you can view the first entry of the\n      %dcelocal%etcCachInfo file for cache location).\n    - Restart the DFS Client\n\n*If you have long-running applications launched from a DFS mounted\n drive, please do a dcelogin before running your program. The ticket\n lifetime of the account needs to be longer than the duration\n of the run. If you do not dcelogin or the ticket lifetime is not\n long enough, you might find your program traps because the\n access to the DFS mounted drive is lost. When OS/2 tries to\n swap in some executable pages from the DFS drive and your ticket\n is expired, OS/2 will fail to bring in the page and your program\n will trap.\n\nIntercell Setup\n---------------\n\n*If the rgy_edit cell or dcecp registry connect command is issued,\n but one of the cells still has an existing krbtgt entry for the foreign\n cell in its registry (from a previous trust configuration), the command\n will appear to succeed.  However, authenticated intercell access will\n fail because the keys for the two krbtgt entries are now out of sync.\n\n This situation can be detected by doing a full view on each of the\n two krbtgt accounts created for intercell (these are of the form\n krbtgt/&lt;foreign_cellname&gt;). If the creation time on the krbtgt account\n for the foreign cell is different from the last change time, it is\n likely that this entry is not valid.\n\n To recover from this situation, in each cell, delete the krbtgt entry\n for the foreign cell  and reissue the rgy_edit cell or dcecp registry\n connect command.\n\n*If you have established an intercell relationship between two cells and\n then removed it, you will need to use a full DCE client to perform the\n following steps for re-establishing the intercell relationship:\n\n  On one machine (preferably the machine running the CDS and/or Security\n  Servers) in each cell:\n\n   * enter rgy_edit and do the following at the rgy_edit command prompt:\n        rgy_edit&gt; do p\n        rgy_edit&gt; del krbtgt/&lt;foreign principal name&gt;\n   * execute dcelgoff -purge at a command line\n   * exit out of any dcelogin sessions\n   * dcestop all DCE daemons\n   * remove the following files:\n         /opt/dcelocal/var/security/rcache/krb5kdc.rch\n         /opt/dcelocal/var/security/creds/*\n   * if you are NOT using GDA to resolve foreign cell names, remove\n     the following files:\n         /opt/dcelocal/var/adm/dir/cds/cdscache.*\n   * dcestart all DCE daemons\n\n\n  You can now re-establish the trust relationship.  In only one of the\n  cells, you can use either the DCE Admin GUI or the command line\n  interfaces to set up the trust relationship (as if it had never\n  been set up originally).\n\n\n  Note: if you supply an incorrect password while setting up the trust\n        relationship either through the GUI or via command line, you\n        will get errors indicating either:\n\n            * a Data Integrity error has occurred\n             * Invalid password was supplied\n\n         To recover from this, you will need to follow all the steps\n         outlined above.\n\n\n\nStart/Stop DCE\n--------------\n\n*In order to insure the integrity of the backing stores used by DCE\n it is highly recommended that DCESTOP be run prior to restarting or\n shutting down your system. This is particularly important on any\n systems which are DCE or application servers.\n\n*If you are having problems of starting DCE daemons using dcestart,\n you can start the daemons directly at the command line. The\n following are the commands you need to start DCE daemons\n at the OS/2 command prompt:\n -cdsd (CDS Server)\n -secd (Security Server)\n -dced (Security Client)\n -cdsadv (CDS Advertiser)\n -dtsd -c (DTS Client)\n -dtsd -s (DTS Server)\n -dfsd (DFS Client)\n -auditd -a (Audit Server)\n  -For audit daemon, you also need to make sure that the following\n   environment variables are set in your config.sys\n   -set DCEAUDITON=1 If it is not set in your config.sys\n   -set DCEAUDITOFF= If it was set to 1 before\n To stop DCE daemons, just hit CTRL+C at the daemon&amp;#039;s window.\n\n*If you found that dcestart exited with error messages indicating\n that some daemons can not be started in five minutes. You can\n set dcestart time-out period with the MOCLWAITTIME. The\n default is 300 (seconds) if the environment variable is not\n set.\n\n*When DCESTART is run on the Master security server machine\n of a split server setup, the rbuildpe will fail because the CDS\n Server is not yet running. Please run rbuildpe again when both the \n Master security server and Initial CDS server are both running.  \n When you see the error, DCE has been successfully started on \n that machine - unless there were other error failures.\n\nServiceability\n-------------\n*dce_svc_register() vs. DCE_SVC_DEFINE_HANDLE. If you are using\n advanced serviceability function, such as filtering with\n dce_svc_filter(), dce_svc_register() should be used, not\n DCE_SVC_DEFINE_HANDLE. DCE_SVC_DEFINE_HANDLE does not actually\n register the handle, it simply defines the data structures.\n\nInternationalization\n--------------------\n*The control programs which have been superseded by dcecp in this DCE\n release (rgy_edit, acl_edit, secadmin and cdscp) have not been enabled\n to support multibyte characters. If you are working in a multibyte\n environment, you should use dcecp.\n\n*The &quot;i18ndir&quot; environment variable contains the path to the\n DCE-supported locales.  These DLL names, e.g., &quot;enus437&quot;, can\n be used as the second parameter of the dce_setlocale()\n function, or as the value of the LANG environment variable.\n For more information about the locales and about the XPG\n internationalization programming model, see the\n internationalization documentation included with the Developer\n Connection for OS/2.\n\n*Characters that are not in the DCE portable character set can\n be used in DCE passwords.  If these non-portable characters\n are used, however, the password will not work correctly in\n system environments that are heterogeneous with respect to\n code set.  Unless your environment is extremely homogeneous,\n you should avoid creating passwords that use characters that\n are not in the portable character set.\n\n*For languages that are using a multibyte character set, which is\n used in Asian countries, a multibyte_conversion_error is\n provided.  If you get this error, this means the underlying software\n is having trouble processing characters in the codeset of your\n environment.  Check the internationalization environment variables\n in your config.sys file.  Be sure you have these variables set as\n instructed in your OS/2 Warp documentation.\n\n Some environment variables you might need to check are:\n\n       CODEPAGE\n       COUNTRY\n       LANG\n\n\n\n\n*In this release, the code sets attribute should be accessed only via\n the RPC NSI interface to the Directory Services.  Although the code\n sets attribute has an ISO Object Identifier (OID), it should not be\n referenced in the current release.\n\n\n\n*The RPC conversion type can be one of the following values:\n\n idl_cs_no_convert         No code set conversion is required.\n idl_cs_in_place_convert   Code set conversion can be performed in a \n                           single storage area.\n idl_cs_new_buffer_convert The converted data must be written to a new\n                           storage area.\n\n The C language representation of a conversion type structure is:\n\n typedef enum {\n       idl_cs_no_convert,\n       idl_cs_in_place_convert,\n       idl_cs_new_buffer_convert\n       } idl_cs_convert_t;\n\n DCE RPC supplied stub buffer sizing routines do not support the\n idl_cs_in_place_convert conversion type.  The reason is\n that the actual conversion method (RMIR, SMIR, CMIR or UNIVERSAL)\n used is determined at runtime, there is no guarantee that the \n conversion can be performed in a single storage area.\n\n\n*The cs_char Attribute. Arrays of cs_char can be fixed, varying, \n conformant, or conformant varying. The treatment of a scalar \n cs_char is similar to that of a fixed arry of one element.  \n In this release only, conformant or conformant varying arrays \n can be used without restrictions, because they are designed to allow\n the data expansion and contraction which can occur during code set\n conversion. For fixed or varying arrays, the size of the storage \n available to hold the local data is determined by the array size \n specified in the IDL and the local type specified in the cs_char \n attribute.  The array size is fixed and can not be modified during \n the RPC marshalling or unmarshalling. For fixed arrays, the number \n of bytes of data on the client, the server, and the network\n must be exactly equal to the number defined in the IDL file.\n\n*Following are the additional restrictions for fixed or varying arrays:\n\n -For a fixed array, the number of array elements in the local (client \n  and server) and network representations of the data must be the \n  same as the array size defined in the IDL.  The following \n  restrictions apply to the use of fixed arrays:\n\n   .Because the array size is the input length used by the code set\n     conversion, the complete array must be populated with valid data.\n\n   .You must write your own stub buffer sizing routines and code set\n    conversion routines.  The routines provided by DCE RPC do not\n    support the &quot;idl_cs_in_place_convert&quot; conversion type.\n\n   .You may write your own stub tag_setting routines or use DCE RPC\n    provided tag_setting routine rpc_cs_get_tags() to set the\n    sending tag value and the receiving tag value.  You must ensure\n    that the code set conversion between server and\n    client will not result in data expansion or contraction.\n\n   .You may write your own character and code sets compatibility\n    evaluation routines. You must not use the DCE RPC\n    rpc_cs_eval_with_universal() because universal conversion may\n    cause data expansion. You may use the rpc_cs_eval_without_universal()\n    but keep in mind that the conversion model used by\n    this routine is: RMIR, then SMIR, then CMIR.  You have to\n    make sure that the conversion can be performed without data expansion\n    or contraction.\n\n -For a varying array, neither the number of array elements in the local\n  representation nor the number of array elements in the network\n  representation may exceed the array size in the IDL.\n\n  Restrictions similar to those for fixed arrays also apply\n  to varying arrays.  The value of length_is is the input length used\n  by the code set conversion routine.   Expansion and contraction of data\n  is allowed within the array size defined in the IDL file.\n\n\n*Additional information about code set stub routines consideration for\n fixed and varying arrays\n\n cs_byte_from_netcs\n ------------------\n Parameters\n   Input\n     Network_data_length\n       The number of idl_byte data elements to be converted.  \n       For a varying array or a conformant varying array, this value \n       is the local value of the length_is variable. For a conformant \n       array, this value is the local value of the size_is variable.\n       For a fixed array, the value is the array size specified in \n       the interface definition.\n   Output\n     local_data_length\n       The length of the converted data, in units of idl_byte.\n       It is a NULL pointer if a fixed array is to be converted.\n Usage\n     The routine returns the converted data, in idl_byte format. If \n     the data is a varying, conformant, or conformant varying array, \n     the routine also returns the length of the converted data, in \n     units of idl_byte.\n\n cs_byte_local_size\n ------------------\n Parameters\n   Input\n     Network_buffer_size\n       The size, in units of idl_byte, of the buffer that is allocated for\n       the international character data.\n       For a conformant or conformant varying array, this value is the \n       network value of the size_is variable for the array; that is, \n       the value is the size of the unmarshalled string if no \n       conversion is done.\n   Output\n     local_buffer_size\n       This value is to be used as the local value of the size_is variable\n       for the array, and is non-NULL only if a conformant or conformant\n       varying array is to be unmarshalled.  A value of NULL in this\n       parameter indicates that a fixed or varying array is to be \n       unmarshalled.\n Usage\n     Client and server stubs specify the network storage size of the \n     data, in units of idl_byte, if a conformant or conformant varying \n     array is to be unmarshalled, or they specify NULL if a fixed or \n     varying array is to be marshalled.\n\n     When called from a client stub, for fixed and varying arrays, the\n     routine assumes that network_buffer_size is sufficient to store the\n     converted data.\n\n cs_byte_net_size\n ----------------\n Parameters\n   Output\n     network_buffer_size\n       This value is to be used as the network value of the size_is \n       variable for the array, and is non-NULL only if a conformant \n       or conformant varying array is to be marshalled.  A value of \n       NULL in this parameter indicates that a fixed or varying array \n       is to be marshalled.\n Usage\n     The routine returns the new buffer size in the network_buffer_size\n     parameter. For fixed and varying arrays, the routine assumes that\n     local_buffer_size is sufficient to store the converted data.\n\n cs_byte_to_netcs\n ----------------\n Parameters\n   Input\n     local_data_length\n       The number of idl_byte data elements to be converted. For a varying\n       array or a conformant varying array, this value is the local \n       value of the length_is variable. For a conformant array, this \n       value is the local value of the size_is variable.  For a \n       fixed array, the value is the array size specified in the \n       interface definition.\n   Output\n     network_data_length\n       The length of the converted data, in units of idl_byte.\n       It is a NULL pointer if a fixed array is to be converted.\n Usage\n     The routine returns the converted data, in idl_byte format.\n     If the data is a varying, conformant, or conformant varying \n     array, the routine also returns the length of the converted \n     data, in units of idl_byte.\n\n\nMOCL(Management Object CLass Library)\n-------------------------------------\n\n*The MOCL stores class definitions that are loadable at run-time using\n a SOM interface repository file called mocl.ir.  SOM finds these classes\n at run-time using an environment variable called SOMIR.  Problems can\n occur if this path is not set correctly and are usually the cause of\n problems related to loading MOCL classes or MOCL initialization.\n Some MOCL and SOM recommendations are listed below in case there are\n problems during initializing the MOCL.\n\n For example, you would get the following error message,\n\n   Factory for class Base_PolicyRegisons::Base_PolicyRegionIM\n   was not found.\n\n   MOCL.IR file\n\n      -  A file called mocl.ir should have been installed along with\n         the MOCL and should be listed in the SOMIR path when executing\n         MOCL code.   For example:\n\n         SOMIR=D:OS2ETCSOM.IR;D:OPTDCELOCALLIBMOCL.IR;\n               D:OS2ETCWPSH.IR;D:OS2ETCWPDSERV.IR\n\n      -  The mocl.ir file should not be empty (or 32 bytes which is the\n         SOM initial create size for a repository file.)\n\n\n   SOM.IR file\n\n      -  There should be only one som.ir file listed in the SOMIR path.\n\n      -  The som.ir file should not be empty (or 32 bytes which is the\n         SOM initial create size for a repository file.)\n\n      -  The som.ir file should be the latest version that has been\n         installed on the machine to ensure that the SOM reliant software\n         installed on the machine is compatible with the SOM version\n         installed.\n\n      -  The som.ir version should be compatible with the SOM dll&amp;#039;s that\n         are being used by way of the LIBPATH environment variable.\n\n      -  It is recommended that the som.ir file is listed first in the\n         SOMIR path.\n\n\n   SOMIR path\n\n      -  SOM uses the last file in the SOMIR path to write to, this file\n         should not be read only.\n\n      -  If the last file is not fully qualified while running in a\n         directory or drive that is read only (particularly a mounted\n         drive), SOM will return an error.  It is a good idea\n         to fully qualified the last file.\n\nEMS(Event Management Service)\n-----------------------------\n*Remote management of application servers can be enabled by using\n features offered in the current version of DCE.  These features\n include DCE Serviceability (SVC), Event Management Service (EMS)\n and DCE Simple Network Management Protocol (SNMP) Subagent.\n For more information on this, refer to the Developer Connection\n News (Vol 10) article titled &quot;Enabling DCE Application Servers\n for System Management&quot;.\n\n*Routing messages from DCE core servers to EMS/SNMP is not supported\n in this release.\n\n*ems_mgmt_list_ems() returns non-zero addr value. The API\n ems_mgmt_list_ems() is used to list where all the EMS daemons are\n running in the current cell.  When no daemons are running in\n the current cell, a zero status code along with a non-zero\n value for host_list is returned.  Accessing this non-zero\n host_list array will cause an access violation.\n\n A work around to this problem is to initialize host_list to\n NULL and then call ems_mgmt_list_ems(). Before the host_list\n array is accessed to view the hosts, a check to ensure that\n the host_list is not NULL can be added.\n\nDCE Admin GUI\n--------------\n*If the GUI has been up and running for some time, use the Refresh\n menu item to get the most current information for the selected object.\n The Permission page, however, will not reflect changes made outside\n the Admin GUI until the next time the GUI is started.\n\n*On a slim client, the GUI supports only GDA to establish intercell\n communication. Install the full client in order to use either GDA\n or non-GDA to establish intercell through the GUI.\n\n*Non-OS/2 DCE 2.1 hosts and servers may not return all requested data\n to the GUI.  In this case the fields will be left blank.\n\n*On the permissions page of an object, the user will need to apply the\n changes after modifying each ACL entry type, i.e., Object, Entry, \n Initial Object, and Initial Container. Not all objects support \n all ACL Entry Types.\n\n To modify more than one ACL entry type:\n     1) Select the ACL entry type\n     2) Modify the ACL entry\n     3) Select the Apply push-button to commit the changes\n     4) Repeat steps 1 through 3 for each ACL entry type to \n        be modified\n\n\nDFS GUI\n--------\n\n*You should not delete user_obj, group_obj, and other_obj ACLs. If\n any of these acl_entries are deleted, and the notebook settings\n are then set or applied, the message &quot;no acl found (dce/sec)&quot; will\n be posted. To recover the previous settings, select &quot;Reset&quot;.\n\n*The mask_obj needs to be manually created prior to adding new\n acl_entries other than user_obj, group_obj, and other_obj. Note\n that if using the GUI, the user must create mask_obj and then do\n a &quot;Set&quot; or &quot;Apply&quot; prior to creating new acl_entries.\n\n*The DCE login will not bring up an error message if the DFS\n Reset Connection fails.\n\n*DFS Fileset Replication\n  a.) When adding a replica you must first creating a staging\n      replica i.e. a replica on the same server (not necessarily the\n      same aggregate) as the read/write replica\n  b.) Adding a new site only adds an entry in the FLDB.  You must\n      update it for the actual fileset to be created.  If you don&amp;#039;t, in\n      many occasions you will get the message &quot;fileset does not exist&quot;\n      although you see it in the GUI, or you will not be able to get to\n      the directory the fileset is mounted to.\n  c.) Do not attempt to successively drag/drop objects from one\n      window, while the previous DD on the same window is not\n      completed.\n  d.) When mounting a fileset, it is advisable to use the regular\n      mount point.\n\n*When running with expired credentials the DFS GUI will hang.\n To avoid this, login as often as necessary to keep credentials\n current.\n\n*Local Workstation: The preference page for the local workstation  \n object has a &quot;Refresh on open&quot; selection available for refreshing \n notebooks and folders each time they are open.  This selection \n only applies to the DFS GUI objects and NOT to any DCE objects.\n\n*The DFS administration GUI is not supported on a machine \n installed with DSS for Lan Server or DSS for DCE slim client.\n                                                         \nOthers\n------\n\n*The DCE backing store does not release database pages that\n become empty by deletion of all items on a page. Instead a list of\n empty pages is maintained. Later, when a new page is needed, this\n list is checked first. If there is a page available in the list, it\n is used.  If not, then a page at the end of the file is allocated.\n Thus the database files never shrink, but rather remain the maximum\n size that they ever grew to.\n\n*The &quot;DCE for OS/2 Warp:  Administration Guide--Core&quot; documents the\n procedures for regularly backing up the Security Service Registry and\n CDS databases.  In addition to this, as part of your regular backup\n procedures, it is recommended you make backup copies of all the dced\n databases.  This will reduce the risk of database corruption when DCE\n is exited abnormally.\n\n To make the backup copies, copy all the *.db files from the\n optdcelocalvardced directory to your backup media.  This must be\n done while DCE is not running.  If you need to restore a database file\n (for example if you get an error such as &quot;Cannot open DCED database\n Keytab.db ...), you can do so by copying the *.db file from your\n backup media to the optdcelocalvardced directory.\n\n*In an environment which contains systems running multiple releases\n of DCE, you may periodically see messages of the form:\n\n (RPC_CN_AUTH_VFY_CLIENT_REQ) on server failed status = 14129090\n\n These messages are informational and can be ignored.\n\nProblem Determination\n=====================\n\n*If you notice that DCE is not responding, use the following\n procedure to check that the DCE daemons are up and running:\n -If the daemons are not detached, switch to the daemon\n  sessions to view their status.\n -If the daemons are detached, use pstat to check whether\n  the following daemons exist:\n  -secd\n  -dced\n    -cdsd\n    -cdsadv\n\n*The status can also be checked by running &quot;dceos2pq &lt;DCE daemon&gt;&quot;.\n The name of DCE daemons are: secd, dced, cdsd, cdsadv (CDS\n advertiser), cdsclerk (CDS clerk). If DCE is running\n correctly, then dceos2pq should show that all daemons are\n in the &quot;DCEOS2_PROCESS_INITED&quot; state.\n\n If you find that some of the daemons are not there, use\n dcestart to start the daemon. The &quot;dcestart -?&quot; command will\n give you the syntax of dcestart command and the names\n of the daemons.\n\n*If the OS/2 DCE DFS Client cannot attach a drive at the\n local cell&amp;#039;s FS Junction (&quot;/:&quot;), check the &quot;dfsd&quot; daemon for\n error messages.  If daemons are running detached, dfsd will\n log information to the file &quot;&lt;dcelocal&gt;vardfsadmdfsd.log&quot;.\n\n - Check that the DCE Daemons are up and running (&quot;DCED&quot; and\n   &quot;CDSADV&quot; for Full Client, or &quot;Slim DCE Client&quot; for Slim):\n\n - If all daemons are running correctly, check for the\n   following:\n      - There may be no DFS Server(s) in your local cell.\n      - The DFS Server(s) may be unavailable or may not be\n        fully configured.\n      - CDS or Security state errors may have occurred.  Try:\n          - &quot;cdscp show cell /.:&quot;\n          - &quot;dcelogin&quot;\n      - The clock skew between your client and the DFS Server(s)\n        may be too great. Adjust the system time for your client.\n\n*Client Marshaller Trap. This is most likely caused by an illegal\n input parameter that contains a pointer with invalid value, or has\n an invalid union tag. To debug, find out the input parameter and the\n bad values which the client application passes into the client stub.\n\n*Server Marshaller Trap. This is most likely caused by an illegal\n output parameter that contains a pointer with invalid value, or\n has an invalid union tag. To debug, find out the output parameter\n and the bad values which the manager routine returns to the server\n stub.\n\n\n*If you suspect a problem from the compact stubs, you may create\n the regular stubs by not using (removing) the options: -compact_cstub,\n -compact_sstub, or -compact_stubs of the IDL compiler.\n If the problem goes away with the regular stubs, it is a problem with\n the compact stubs. Otherwise, it is not.\n\n*If you are seeing the message &quot;rpc_binding_set_auth_info failed&quot;\n during configuration, run the following command:\n\n &quot;cdscp dump clerk cache | more&quot;\n\n The command will list the cached directories/clearinghouses on the\n local machine. Usually there are two types of clearinghouse will\n be cached:\n\n -Additional CDS server\n  The error happened because you already configured the additional\n  s","torrent":{"xt":"urn:btih:f4863fc5acc14edcc0a57c539c5b41e9a3f17f98","amp;dn":"IBM+OS2+DCE+Client+including+DFS+for+OS%2F2+Warp","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"f4863fc5acc14edcc0a57c539c5b41e9a3f17f98","infoHashBuffer":{"type":"Buffer","data":[244,134,63,197,172,193,78,220,192,165,124,83,156,91,65,233,163,241,127,152]},"announce":[],"urlList":[]}}