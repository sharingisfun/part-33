{"title":"Vladimir.Horowitz.The.Last.Romantic.AVC.AC3.HD.720p.1985","uid":11139451,"size":3018865915,"categoryP":"video","categoryS":"hd___movies","magnet":"?xt=urn:btih:3a0d488fdc3edecfe0c101b99d4d5971ffa312b4&amp;dn=Vladimir.Horowitz.The.Last.Romantic.AVC.AC3.HD.720p.1985&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":1,"leechers":1,"uploader":"user101966","files":2,"time":1412154038,"description":"You can skip all the ranting below. Except, just note that 5 minutes of video are missing at the end. The audio is not missing.\n\n*******************************************\nGeneral\nComplete name                            : Vladimir Horowitz - Der letzte Romantiker.AVC.AC3.720p.1985.avi\nFormat                                   : AVI\nFormat/Info                              : Audio Video Interleave\nFormat profile                           : OpenDML\nFile size                                : 2.81 GiB\nDuration                                 : 1h 21mn\nOverall bit rate                         : 4 913 Kbps\nWriting application                      : Lavf53.6.0\n\nVideo\nID                                       : 0\nFormat                                   : AVC\nFormat/Info                              : Advanced Video Codec\nFormat profile                           : &lt;a class=&quot;__cf_email__&quot; href=&quot;/cdn-cgi/l/email-protection&quot; data-cfemail=&quot;94dcfdf3fcd4d8a7baa6&quot;&gt;[email&amp;#160;protected]&lt;/a&gt;&lt;script cf-hash='f9e31' type=&quot;text/javascript&quot;&gt;\n/* &lt;![CDATA[ */!function(){try{var t=&quot;currentScript&quot;in document?document.currentScript:function(){for(var t=document.getElementsByTagName(&quot;script&quot;),e=t.length;e--;)if(t[e].getAttribute(&quot;cf-hash&quot;))return t[e]}();if(t&amp;&amp;t.previousSibling){var e,r,n,i,c=t.previousSibling,a=c.getAttribute(&quot;data-cfemail&quot;);if(a){for(e=&quot;&quot;,r=parseInt(a.substr(0,2),16),n=2;a.length-n;n+=2)i=parseInt(a.substr(n,2),16)^r,e+=String.fromCharCode(i);e=document.createTextNode(e),c.parentNode.replaceChild(e,c)}}}catch(u){}}();/* ]]&gt; */&lt;/script&gt;\nFormat settings, CABAC                   : Yes\nFormat settings, ReFrames                : 4 frames\nCodec ID                                 : H264\nDuration                                 : 1h 21mn\nBit rate                                 : 4 600 Kbps\nWidth                                    : 960 pixels\nHeight                                   : 720 pixels\nDisplay aspect ratio                     : 4:3\nFrame rate                               : 50.000 fps\nColor space                              : YUV\nChroma subsampling                       : 4:2:0\nBit depth                                : 8 bits\nScan type                                : Progressive\nBits/(Pixel*Frame)                       : 0.133\nStream size                              : 2.62 GiB (93%)\nWriting library                          : x264 core 123 r2189 35cf912\nEncoding settings                        : cabac=1 / ref=3 / deblock=1:1:0 / analyse=0x3:0x113 / me=hex / subme=9 / psy=1 / psy_rd=1.00:0.00 / mixed_ref=1 / me_range=16 / chroma_me=1 / trellis=1 / 8x8dct=1 / cqm=0 / deadzone=21,11 / fast_pskip=1 / chroma_qp_offset=-2 / threads=3 / sliced_threads=0 / nr=0 / decimate=0 / interlaced=0 / bluray_compat=0 / constrained_intra=0 / bframes=3 / b_pyramid=2 / b_adapt=1 / b_bias=0 / direct=1 / weightb=1 / open_gop=0 / weightp=2 / keyint=250 / keyint_min=25 / scenecut=40 / intra_refresh=0 / rc_lookahead=50 / rc=2pass / mbtree=1 / bitrate=4600 / ratetol=1.0 / qcomp=0.60 / qpmin=10 / qpmax=51 / qpstep=4 / cplxblur=20.0 / qblur=0.5 / ip_ratio=1.40 / aq=1:1.20\n\nAudio\nID                                       : 1\nFormat                                   : AC-3\nFormat/Info                              : Audio Coding 3\nMode extension                           : CM (complete main)\nFormat settings, Endianness              : Big\nCodec ID                                 : 2000\nDuration                                 : 1h 21mn\nBit rate mode                            : Constant\nBit rate                                 : 320 Kbps\nChannel(s)                               : 2 channels\nChannel positions                        : Front: L R\nSampling rate                            : 44.1 KHz\nBit depth                                : 16 bits\nCompression mode                         : Lossy\nStream size                              : 188 MiB (7%)\nAlignment                                : Aligned on interleaves\nInterleave, duration                     : 35 ms (1.74 video frames)\n\n********************************************\n\n[RANT]\nOnce again, another video as the result of fiddling around and trying to learn something about one thing which then leads to another. In this case, the film is a documentary hard-subtitled in German - which is a miracle in itself - and spoken in English. Well Horowitz is, and never was German anyway so there's no real argument for &quot;overdubbing&quot; as the Germans almost always do, leaving a trail of artistic wreckage in their wake as they spoil every audio-visual work they manage to get their grubby little fingers on. \n\nCan't they read?\n\nSo that was on the plus side. Another thing on the plus side is the fact that I've learned even more about Mpeg4/10 or x264 or H264 or whatever you want to call it. Nowadays it's simply called AVC which is an acronym for &quot;Advanced Video Codec&quot;. So I am able to do now what I could *never* have done in the past which is to take an interlaced source file (this one was an MP2.MP2, interlaced AVI file). I could show you the details of the source quickly Ã¢â‚¬Â¦ \n\nBrief version:\n******************************\nVideo\nFormat                                   : MPEG Video       (ID 224 (0xE0))\nFormat version                           : Version 2        (Main@Main)\nBit rate                                 : 2 395 Kbps\nWidth                                    : 576x480 pixels\nDisplay aspect ratio                     : 4:3              (25.000 fps)\nScan type                                : Interlaced\n--------------------------------\nAudio\nFormat                                   : MPEG Audio (ID 192 (0xC0))\nFormat version                           : Version 1, Layer 2\nMode                                     : Joint stereo (Intensity Stereo)\nDuration                                 : 1h 22mn\nBit rate                                 : 192 Kbps (Constant, 2 channels)\nSampling rate                            : 44.1 KHz\n******************************\n\nOkay? \n\nNow if you take that AVI file and just try saving it with avidemux it doesn't do the happy thing and make it a progressive scan type as it does with, say, an MPEG-TS file. It just leaves it as interlaced.\n\nAnd I was looking for a good project to work on to see how to de-interlace a video that's not great quality and try to bring it up to HD 720p quality @ 2x frame rate. I tried it and fiddled with the settings and came up with what I think was a very good comprimise between sharpness and blockiness and smoothing. Took a few hours to find a good command line which in fact is (according to Media Info):\n\ncabac=1 / ref=3 / deblock=1:1:0 / analyse=0x3:0x113 / me=hex / subme=9 / psy=1 / psy_rd=1.00:0.00 / mixed_ref=1 / me_range=16 / chroma_me=1 / trellis=1 / 8x8dct=1 / cqm=0 / deadzone=21,11 / fast_pskip=1 / chroma_qp_offset=-2 / threads=3 / sliced_threads=0 / nr=0 / decimate=0 / interlaced=0 / bluray_compat=0 / constrained_intra=0 / bframes=3 / b_pyramid=2 / b_adapt=1 / b_bias=0 / direct=1 / weightb=1 / open_gop=0 / weightp=2 / keyint=250 / keyint_min=25 / scenecut=40 / intra_refresh=0 / rc_lookahead=50 / rc=2pass / mbtree=1 / bitrate=4600 / ratetol=1.0 / qcomp=0.60 / qpmin=10 / qpmax=51 / qpstep=4 / cplxblur=20.0 / qblur=0.5 / ip_ratio=1.40 / aq=1:1.20\n\nImportant bits:\n---------------\nÃ¢â‚¬Â¢ deblock=1:1:0 [intrnl deblock: -3=sharpest(more blocks), 2=softest(less blocks)]\nÃ¢â‚¬Â¢ rc=2pass, bitrate=4600 [2x input data rate]\nÃ¢â‚¬Â¢ aq=1:1.20 [very high adaptive &quot;quantization&quot;]\nÃ¢â‚¬Â¢ keyint_min=25 (=src FPS), keyint=250 (10*keyint_min)\nÃ¢â‚¬Â¢ trellis=1 ==&gt; Decimate OFF [don't mix these 2]\n\nAnd in this case the rest didn't matter. I simply chose Donald Graft Bob Deinterlace (2x frames, 2x rate) and then rescaled the image for quite a nice visual output.\n \nNow the only remaining problem, I figured, was the audio (which was terrible). Well these encodings take so long that there's lots of time to experiment with other things while your machine is basically on the verge of overheating for 10 to 12 hours. What I do is take it at 10 minute chunks so that A) I can stop the process and resume another day or later in the case of a power failure and B) so that I can get a look at what's coming out before the 12 hours are up. Which I did. In fact, I even uploaded some samples to YouTube to see how they looked over there. Not too bad but again the audio sucked.\n\nIt never ceases to amaze me how pathetic the free software out there actually is in terms of assisting the user in *any way whatsoever* so that this thing (the software) which is something a person or group been working on for ages might actually be of use to someone else who didn't program it. The problem in this case was a type of noise that anyone would recognize. It's like a &quot;buzz&quot; sound that would indicate the recording was made at a higher volume than the receiver could handle. So what you hear is not only the sound but also the microphone vibrations which feed back (at a very high frequency) causing the buzz. \n\nNow that phenomenon is so commonplace that to remove the effect should be little more than pushing a button. Maybe even the default? Right? \n\nNope. There *is* something called &quot;noise removal&quot; but it's very difficult to use. What you have to do is find a &quot;sample&quot; of the noise that you want removed and then apply it for the whole audio stream. So, like a hiss say. That's fine for a hiss because a hiss is *actually* noise Ã¢â‚¬Â¦ I mean in the &quot;mathematical&quot; sense.\n\nA hiss is not anywhere close to a single tone. So, you know, you find some &quot;hiss&quot; record it (build profile) and then remove it. Only problem is, it's damn near impossible to find a &quot;clean&quot; sample of a particular hiss because usually there's music (even soft music) that gets mixed up with your sample and then suddenly your audio loses all C# sounds or something.\n\nBut again, that should be a SINGLE BUTTON. &quot;Find Noise And Remove It&quot;.\n\nThis is 2014 don't ya know? You'd think someone might have written some software to find audio samples that are evenly distributed in frequency inside a sound file right? And if you can't, then at leat don't add the pure tones to the &quot;noise profile&quot;, 'cause that's never noise. A sample that has a high peak in the Ãâ€  plane is NOT NOISE. Visually that would be like removing blue from an image because the user selected an area that had lots of blue in it (and lots of extraneous noise).\n\nSo that's another big failure of mankind.\n\nNext, they have a thing called &quot;Isolate Noise&quot; which I figured would be PERFECT because if I find an example of the hiss, then have it attempt to isolate the hiss all I need to do is subtract that off by &quot;Inverting&quot; the amplitudes (there is such a thing) and mixing the inverted noise with a copy of the original. Much like what Dolby does. \n\nBut nope. Doesn't work.\n\nInstead what you have to do is recall your post-grad university physics courses and realize that nearly all noise (hisses, buzzes, feedback etc) will typically be at 2 or 3x the source frequency (they come from harmonics in recording equipment or other objects). ie. Almost all noise is VERY high frequency (VHF) so then you pull out the equalizer and take your best &quot;guess&quot; what &quot;high&quot; means, then cut off sounds above that frequency by fiddling with those little sliders and voila! The noise disappears. The hisses and the buzzes and the feedback. All gone. \n\nBut I had to guess.\n\nAgain, not the end of the story and I won't finish it because this is an incredible waste of time. But I did have this thing down below here already, so I'll leave it in.\n\n***************************\nRe: avidemux and time:\nIt's funny because avidemux, for all the great things it can do, isn't so great when it comes to that little time selection interface they never really implemented. So in this case I could not select the entire video for encoding, I could only select up to 1:17 whereas the actual video runs 1:22, a difference of 5 minutes!\n\nAnd of course, after an entire day of encoding I get to the last chunk, and can't pull any further past 1:17 for GOD KNOWS WHAT REASON, and so I snip it all together and it turns out (at the end) he's right in the middle of &quot;Chopin Polonaise NÃ¢ï¿½Â°2 Op. 53&quot; when it cuts off.\n\nWell I did have the entire audio, which I'd re-encoded to mp3 so I could do some editing (noise removal) so if only I could just &quot;stretch&quot; the end part and even though you can't watch it, at least you could hear it. But how to do that? The video properties have to match up to the *BIT*. Well, I figured, I'll clip out a bit from what I have already. Just use direct stream copy and build myself 5 minutes worth of the correct video type. No problem. Works like a charm! But now of course there's the audio. It won't let me add it if it doesn't have any audio, and if there *is* audio IT HAS TO BE EXACTLY THE SAME FORMAT AS THE OTHER PIECE. So, I overwrite the audio with any old mp3, for the video and the extension. Glue them together to make a 3rd file that's the right length and then re-overwrite the audio for that extended video to overwrite the audio I never needed in the first place!\n\n*************************\n[/RANT]","torrent":{"xt":"urn:btih:3a0d488fdc3edecfe0c101b99d4d5971ffa312b4","amp;dn":"Vladimir.Horowitz.The.Last.Romantic.AVC.AC3.HD.720p.1985","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"3a0d488fdc3edecfe0c101b99d4d5971ffa312b4","infoHashBuffer":{"type":"Buffer","data":[58,13,72,143,220,62,222,207,224,193,1,185,157,77,89,113,255,163,18,180]},"announce":[],"urlList":[]}}